name: Azure Template Deployment

on: workflow_dispatch

jobs:
  DeployAzureTemplate:
    name: "Deploy Azure Template"
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - id: azure-login
        name: Azure Login
        uses: ./.github/actions/azure-login
        with:
          azure-deploy-client-id: ${{ secrets.AZURE_DEPLOY_CLIENT_ID }}
          azure-deploy-client-secret: ${{ secrets.AZURE_DEPLOY_CLIENT_SECRET }}
          azure-deploy-subscription-id: ${{ secrets.AZURE_DEPLOY_SUBSCRIPTION_ID }}
          azure-deploy-tenant-id: ${{ secrets.AZURE_DEPLOY_TENANT_ID }}

      - name: Connect Az Account
        shell: pwsh
        run: |
          Connect-AzAccount -ServicePrincipal -Tenant '${{ secrets.AZURE_DEPLOY_TENANT_ID }}' -Credential (New-Object System.Management.Automation.PSCredential('${{ secrets.AZURE_DEPLOY_CLIENT_ID }}', (ConvertTo-SecureString '${{ secrets.AZURE_DEPLOY_CLIENT_SECRET }}' -AsPlainText -Force))) -ErrorAction Stop
          Select-AzSubscription -SubscriptionId '${{ secrets.AZURE_DEPLOY_SUBSCRIPTION_ID }}' -ErrorAction Stop

      - name: Create Resource Group
        shell: bash
        run: |
          az deployment sub create \
            --name subscriptionDeployment \
            --location centralus \
            --template-file ./templates/resourceGroup.bicep \
            --parameters resourceGroupName=${{ vars.AZURE_RESOURCE_GROUP }} resourceGroupLocation=centralus

      - name: Create Globally Unique Names For Resource Group
        id: create-globally-unique-string-for-resource-group  
        uses: ./.github/actions/create-unique-names
        with:
          resourceGroupName: ${{ vars.AZURE_RESOURCE_GROUP }}

      - name: Deploy Bicep template
        shell: bash
        run: |
          az deployment group create \
            --resource-group ${{ vars.AZURE_RESOURCE_GROUP }} \
            --template-file ./templates/azure-resources.bicep \
            --parameters storageAccountName=${{ steps.create-globally-unique-string-for-resource-group.outputs.storageAccountName }} \
                          frontDoorEndpointName=${{ steps.create-globally-unique-string-for-resource-group.outputs.frontDoorEndpointName }}

      - name: Configure Static Website Hosting
        shell: pwsh
        run: |
          ./tools/EnableStaticWebHosting.ps1 -IndexDocument index.html -ErrorDocument404Path 404.html -storageAccountName ${{ steps.create-globally-unique-string-for-resource-group.outputs.storageAccountName }}
